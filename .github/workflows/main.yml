name: Main
on:
  push:
      branches:    
        - 'main'
  workflow_dispatch:
env:
  NODE_VERSION: "16"
  PROJECT_ROOT: ${{ secrets.PROJECT_ROOT }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_AKI }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SAC }}  
  TRACKBOSS_ENVIRONMENT_NAME: trackbosstest
jobs:
  backend-cdk-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Specify Node version
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Run CDK backend deployment
      run: bash devops/deploy/backend/deployBackendInfra.sh $PROJECT_ROOT  
  backend-docker-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Specify Node version
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Run Docker Build script
      run: bash devops/deploy/backend/buildDockerImage.sh $PROJECT_ROOT
    - name: Terminate existing API backend to reset it
      run: bash devops/deploy/backend/redeployApiBackend.sh $TRACKBOSS_ENVIRONMENT_NAME
  frontend-cdk-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Specify Node version
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Run CDK frontend deployment
      run: bash devops/deploy/frontend/deployFrontEnd.sh $TRACKBOSS_ENVIRONMENT_NAME $PROJECT_ROOT
  # backend-build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Specify Node version
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ env.NODE_VERSION }}
  #   - name: Install modules
  #     run: npm ci
  #   - name: Run TS Build
  #     run: npm run build
  #   - name: Create Distributable
  #     run: npm run dist
  #   - name: Create Artifact
  #     uses: actions/upload-artifact@v3
  #     with:
  #         name: backend-build
  #         path: dist
  # frontend-build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Specify Node version
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ env.NODE_VERSION }}
  #   - name: Install modules
  #     run: cd frontend && npm ci
  #   - name: Run Frontend Build
  #     run: cd frontend && npm run build-ci
  #   - name: Create Artifact
  #     uses: actions/upload-artifact@v3
  #     with:
  #         name: frontend-build
  #         path: frontend/build

