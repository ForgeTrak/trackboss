name: PR
on:
  - pull_request
  - workflow_dispatch
env:
  NODE_VERSION: "20"
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_AKI }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SAC }}
  PROJECT_ROOT: ${{ secrets.PROJECT_ROOT }}
  TRACKBOSS_ENVIRONMENT_NAME: trackboss
  COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
  COGNITO_POOL_ID: ${{ secrets.COGNITO_POOL_ID }}
  CLUB_EMAIL: ${{ secrets.CLUB_EMAIL }}
  SQUARE_TOKEN: ${{ secrets.SQUARE_TOKEN }}
  SQUARE_LOCATION: ${{ secrets.SQUARE_LOCATION }}
jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Specify Node version
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Install modules
      run: |
        npm ci
        (cd frontend && npm ci)
    - name: Run ESLint
      run: npx eslint .
 # jest-backend-unit-tests:
 #   runs-on: ubuntu-latest
 #   steps:
 #   - name: Checkout code
 #     uses: actions/checkout@v2
 #   - name: Specify Node version
 #     uses: actions/setup-node@v2
 #     with:
 #       node-version: ${{ env.NODE_VERSION }}
 #   - name: Install modules
 #     run: npm ci
 #   - name: Start MySQL service
 #     run: sudo systemctl start mysql.service
 #   - name: Configure database
 #     run: |
 #       cd database/mock_data
 #       sed -i "s/-u root/-u root -proot/g" setup_user.sh
 #       ./setup_user.sh
 #       ./reset_db.sh
 #   - name: Run Jest on backend
 #     env:
 #       COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
 #       COGNITO_POOL_ID: ${{ secrets.COGNITO_POOL_ID }}
 #     run: npm run ci-unit-test
  # jest-backend-integration-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Specify Node version
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ env.NODE_VERSION }}
  #   - name: Install modules
  #     run: npm ci
  #   - name: Start MySQL service
  #     run: sudo systemctl start mysql.service
  #   - name: Configure database
  #     run: |
  #       cd database/mock_data
  #       sed -i "s/-u root/-u root -proot/g" setup_user.sh
  #       ./setup_user.sh
  #       ./reset_db.sh
  #   - name: Run Jest on backend
  #     env:
  #       COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
  #       COGNITO_POOL_ID: ${{ secrets.COGNITO_POOL_ID }}
  #       MYSQL_DB: pradb
  #       MYSQL_HOST: localhost
  #       MYSQL_USER: dev
  #       MYSQL_PASS: devpass
  #     run: npm run ci-integration-test
  # jest-frontend:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Specify Node version
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ env.NODE_VERSION }}
  #   - name: Install modules
  #     run: cd frontend && npm ci
  #   - name: Run Jest on frontend
  #     run: cd frontend && npm run ci-test
  cdk-diff:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Specify Node version
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Frontend build
      run: cd frontend && npm install && npm run build-$TRACKBOSS_ENVIRONMENT_NAME
    - name: CDK diff - front end
      run: cd devops/deploy/frontend && npm ci && npx cdk diff
    - name: CDK diff - back end
      run: cd devops/deploy/backend && npm ci && npx cdk diff $TRACKBOSS_ENVIRONMENT_NAME-backendhost-stack